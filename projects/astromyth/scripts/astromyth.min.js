var posterx = 600;
var postery = 800;
var inc = 0.1;
var scl = 5;
var columnWidth = (dotRadius) => dotRadius * 5;
var numberOfColumns = (dotRadius) => Math.ceil(width / columnWidth(dotRadius));

var fig, figx, figy, figsize, pln, bg, txt, imgpln, cols, rows, xspeed, yspeed, bouncex, bouncey;

var randfig, randpln, textarray, bgarray;

var plnx = 100;
var plny = 100;
var rotation = 0;

var xoff = 0;
var yoff = 0;


var randotext = [];
var randoline;


var figures = [
  '../../projects/astromyth/img/fig/fig1.jpg',
  '../../projects/astromyth/img/fig/fig2.png',
  '../../projects/astromyth/img/fig/fig3.png',
  '../../projects/astromyth/img/fig/fig4.png',
  '../../projects/astromyth/img/fig/fig5.png',
  '../../projects/astromyth/img/fig/fig6.png',
  '../../projects/astromyth/img/fig/fig7.jpg',
  '../../projects/astromyth/img/fig/fig8.jpg',
  '../../projects/astromyth/img/fig/fig9.png',
  '../../projects/astromyth/img/fig/fig10.jpg',
  '../../projects/astromyth/img/fig/fig11.jpg',
  '../../projects/astromyth/img/fig/fig12.jpg',
  '../../projects/astromyth/img/fig/fig13.jpg',
  '../../projects/astromyth/img/fig/fig14.jpg',
  '../../projects/astromyth/img/fig/fig15.jpg',
  '../../projects/astromyth/img/fig/fig16.jpg',
  '../../projects/astromyth/img/fig/fig17.jpg',
  '../../projects/astromyth/img/fig/fig18.jpg',
  '../../projects/astromyth/img/fig/fig19.jpg',
  '../../projects/astromyth/img/fig/fig20.jpg',
  '../../projects/astromyth/img/fig/fig21.jpg',
  '../../projects/astromyth/img/fig/fig22.jpg',
  '../../projects/astromyth/img/fig/fig23.jpg',
  '../../projects/astromyth/img/fig/fig24.jpg',
  '../../projects/astromyth/img/fig/fig25.jpg',
  '../../projects/astromyth/img/fig/fig26.jpg',
  '../../projects/astromyth/img/fig/fig27.jpg',
  '../../projects/astromyth/img/fig/fig28.jpg',
  '../../projects/astromyth/img/fig/fig29.jpg',
  '../../projects/astromyth/img/fig/fig30.jpg',
  '../../projects/astromyth/img/fig/fig31.jpg',
  '../../projects/astromyth/img/fig/fig32.jpg',
  '../../projects/astromyth/img/fig/fig33.jpg'
];


class Planet {
  constructor(x, y, r, planet) {
      this.x = x;
      this.y = y;
      this.r = r;
      this.planet = planet;
  }
  
  show() {
    image(this.planet, this.x, this.y, this.r, this.r);
  }
}



var planets = [];

var figsizex = [posterx, (posterx * 1.5), (posterx * 1.75), (posterx * 2),(posterx * 2.25), (posterx * 2.5), (posterx * 2.75), (posterx * 3), (posterx * 3.25), (posterx * 3.5)];
var figsizey = [postery, (postery * 1.5), (postery * 1.75), (postery * 2),(postery * 2.25), (postery * 2.5), (postery * 2.75), (postery * 3), (postery * 3.25), (postery * 3.5)];

function preload() { 
  font = loadFont('../../media/type/romanus.otf');

  randotext = loadStrings('../../media/scripts/text.txt'); 

    pln0 = loadImage('../../projects/astromyth/img/pln/pln1.png');
    pln1 = loadImage('../../projects/astromyth/img/pln/pln2.png');
    pln2 = loadImage('../../projects/astromyth/img/pln/pln3.png');
    pln3 = loadImage('../../projects/astromyth/img/pln/pln4.png');
    pln4 = loadImage('../../projects/astromyth/img/pln/pln5.png');

    planets = [pln0, pln1, pln2, pln3, pln4];
    pln = planets[int(random(0, planets.length))];
  

  randfig = floor(random(figures.length));
  fig = loadImage(figures[randfig]);
  
  
}


function setup() {
  createCanvas(posterx, postery);

  noLoop();
  frameRate(1);
  cols = floor(width / scl);
  rows = floor(height / scl);

  var button = createButton("reset");
  button.mousePressed(resetSketch);
  button.position(posterx/2-100,postery);

  var savebtn = createButton("save");
  savebtn.mousePressed(savestuff);
  savebtn.position(posterx/2-100,postery+100);

  bouncex = posterx / 2;
  bouncey = postery / 2;
  xspeed = 5;
  yspeed = 5;

  
  textstuff();
}

function draw() { 
    background(random(255), random(255), random(255), 150)
   
    drawFigure(1);
    drawNoise();
    drawPlanets();
    textstuff();
    text(randotext[randoline],width/2,height/2);
    drawGrid();

    
    preload();
}


function resetSketch() {
    clear();
    draw();
  }


  function savestuff() {
    saveCanvas('astromyth poster', 'png');
  }



  function textstuff() {
    textWrap(WORD);
    randoline = round(random(0,randotext.length));
    print(randotext[randoline]);
    textAlign(CENTER,CENTER);  
    textFont(font);
    textSize(random(40,100));
    fill(255, 150);
    stroke(255);
    textStyle(BOLD);
  }

  
  


  function drawPlanets() {
    tint(255, 100);

    for (var i = 0; i < 25; i++) {
      var x = random(width);  
      var y = random(height);  
      var r = random(10, 50);
        planets[i] = new Planet(x, y, r, pln);  
      }
  
      for (num of planets) {
        num.show();
      }
  }



function drawFigure(dotRadius) {  
  var figsize = (Math.floor(Math.random() * 10));
  figx = figsizex[figsize];
  figy = figsizey[figsize];
  fig.resize(figx, figy);
  console.log(figsize);

  for (var i = 0; i < numberOfColumns(dotRadius); i++) {
    offsetX = i * columnWidth(dotRadius);
    drawFig(dotRadius, offsetX);
  }
}

function drawFig(dotRadius, offsetX) {
  var dotDiameter = 5 * dotRadius;
  var dotHeightWithPadding = dotDiameter;
  var numDotsInColumn = Math.floor(height / dotHeightWithPadding);
  var numDotsInRow = Math.floor(width / dotHeightWithPadding);

  var topY = Math.floor(random(10));
  
  for (var i = 0; i < numDotsInColumn; i++) {
    var centerX = Math.floor(random(
      offsetX + dotRadius,
      offsetX + columnWidth(dotRadius) - dotRadius,
    ))

    var centerY = topY + i * dotHeightWithPadding + dotRadius;
    var dotColor = fig.get(centerX, centerY);
    noStroke();
    fill(dotColor, 50);
    ellipse(centerX, centerY, dotDiameter, dotDiameter);
  }
}








function drawGrid() {
    for (var y = 0; y < rows; y++) {
    for (var x = 0; x < cols; x++) {
    rect(x * scl, y * scl, scl, scl)
    noFill();
    stroke(255, 75);
  }
    }
}





function drawNoise() {
    var seed = random(255);
    noiseSeed(seed);

    noise1();
}



//default smokey noise
function noise1() {
  var yoff = 0;
    for (var y = 0; y < rows; y++) {
        var xoff = 0;
        for (var x = 0; x < cols; x++) {
            // var index = (x + y * width);
            var r = noise(xoff, yoff) * 255;
            xoff += inc;
            fill(r, 100);
            rect(x * scl, y * scl, scl, scl)
            noStroke();
        }
        yoff += inc;
    }
}

//random lines across x axis
function noise2() {
  stroke(255);
    noFill();
    beginShape();
    for (var x = 0; x < width; x++) {
      stroke(255, 100);
      vertex(x, random(height));
    }
    endShape();
}

//random lines across y axis** needs debugging
function noise3() {
  stroke(255);
    noFill();
    beginShape();
    for (var y = 0; x < height; y++) {
      stroke(255);
      vertex(random(width), y);
    }
    endShape();
}

//very fine grainy noise
function noise4() {
  for (var x = 0; x < innerWidth; x++) {
      stroke(0);
      point(x, random(height));
    }
}

function noise5() {
  loadPixels();
    
    for (var x = 0; x < width; x++) {
      for (var y = 0; y < height; y++) {
        var index = (x + y * width) * 4;
        var r = random(255); //brightness
        pixels[index + 0] = r; //red
        pixels[index + 1] = r; //green
        pixels[index + 2] = r; //blue
        pixels[index + 3] = 255; //alpha
        pixels.resize(posterx, postery);
      }
    }

  updatePixels();
}