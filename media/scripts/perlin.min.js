    //Coding Train tutorial https://www.youtube.com/watch?v=YcdldZ1E9gU





var inc = 0.1;
var scl = 10;
var cols, rows;
var zoff = 0;

var particles = [];
var flowfield;

var fr;

function setup() {
    createCanvas(1100, 1700);
    cols = floor(width / scl);
    rows = floor(height / scl);
    fr = createP('');

    flowfield = new Array(cols * rows);

    for (var i = 0; i < 10000; i++) {
      particles[i] = new Particle();
   }
   background(255);
  }
  
  function draw() {
    var yoff = 0;
    for (var y = 0; y < rows; y++) {
      var xoff = 0;
      for (var x = 0; x < cols; x++) {
        var index = (x + y * cols);
        var angle = noise(xoff, yoff, zoff) * TWO_PI * 4;
        var v = p5.Vector.fromAngle(angle);
        v.setMag(0.05);
        flowfield[index] = v;
        xoff += inc;
        stroke(0, 50);
      //   strokeWeight(5);
      //   stroke('rgba(255, 80, 255, 0.1)'); //colors dashes
      //   push();
      //   translate(x * scl, y * scl);
      //   rotate(v.heading());
      //   line(0, 0, scl, 0);
      //   pop();
      }
      yoff += inc;
      zoff += 0.00001;
    }

      for (var i = 0; i < particles.length; i++) {
            particles[i].follow(flowfield);
            particles[i].update();
            particles[i].edges();
            particles[i].show();
      }

      fr.html(floor(frameRate()));
  }





      ////////////////////////////////////////////////////////////////////////////////////

      //FINAL FORM!!!!

//       var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;

// var particles = [];
// var flowfield;

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');

//     flowfield = new Array(cols * rows);

//     for (var i = 0; i < 10000; i++) {
//       particles[i] = new Particle();
//    }
//    background(255);
//   }
  
//   function draw() {
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * cols);
//         var angle = noise(xoff, yoff, zoff) * TWO_PI * 4;
//         var v = p5.Vector.fromAngle(angle);
//         v.setMag(0.05);
//         flowfield[index] = v;
//         xoff += inc;
//         stroke(0, 50);
//       //   strokeWeight(5);
//       //   stroke('rgba(255, 80, 255, 0.1)'); //colors dashes
//       //   push();
//       //   translate(x * scl, y * scl);
//       //   rotate(v.heading());
//       //   line(0, 0, scl, 0);
//       //   pop();
//       }
//       yoff += inc;
//       zoff += 0.00001;
//     }

//       for (var i = 0; i < particles.length; i++) {
//             particles[i].follow(flowfield);
//             particles[i].update();
//             particles[i].edges();
//             particles[i].show();
//       }

//       fr.html(floor(frameRate()));
//   }



      //WISPY HAIR and everything before it

// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;

// var particles = [];
// var flowfield;

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');

//     flowfield = new Array(cols * rows);

//     for (var i = 0; i < 10000; i++) {
//       particles[i] = new Particle();
//    }
//    background(255);
//   }
  
//   function draw() {
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * cols);
//         var angle = noise(xoff, yoff, zoff) * TWO_PI * 4;
//         var v = p5.Vector.fromAngle(angle);
//         v.setMag(0.05);
//         flowfield[index] = v;
//         xoff += inc;
//         stroke(0, 50);
//       //   strokeWeight(5);
//       //   stroke('rgba(255, 80, 255, 0.1)'); //colors dashes
//       //   push();
//       //   translate(x * scl, y * scl);
//       //   rotate(v.heading());
//       //   line(0, 0, scl, 0);
//       //   pop();
//       }
//       yoff += inc;
//       zoff += 0.00001;
//     }

//       for (var i = 0; i < particles.length; i++) {
//             particles[i].follow(flowfield);
//             particles[i].update();
//             particles[i].edges();
//             particles[i].show();
//       }

//       fr.html(floor(frameRate()));
//   }


      
      
      
      
      
      
      //MULTIDIRECTIONAL VEINS



// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;

// var particles = [];
// var flowfield;

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');

//     flowfield = new Array(cols * rows);

//     for (var i = 0; i < 10000; i++) {
//       particles[i] = new Particle();
//    }
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * cols);
//         var angle = noise(xoff, yoff, zoff) * TWO_PI * 4;
//         var v = p5.Vector.fromAngle(angle);
//         v.setMag(1);
//         flowfield[index] = v;
//         xoff += inc;
//         stroke(0, 50);
//         strokeWeight(5);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//       //   line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//       zoff += 0.00001;
//     }

//       for (var i = 0; i < particles.length; i++) {
//             particles[i].follow(flowfield);
//             particles[i].update();
//             particles[i].show();
//             particles[i].edges();
//       }

//       fr.html(floor(frameRate()));
//   }



//FLOWFIELD PARTICLES MOVING ALONG LINES

// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;

// var particles = [];
// var flowfield;

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');

//     flowfield = new Array(cols * rows);

//     for (var i = 0; i < 10000; i++) {
//       particles[i] = new Particle();
//    }
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * cols);
//         var angle = noise(xoff, yoff, zoff) * TWO_PI;
//         var v = p5.Vector.fromAngle(angle);
//         v.setMag(0.05);
//         flowfield[index] = v;
//         xoff += inc;
//         stroke(0, 50);
//         strokeWeight(5);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         //line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//       zoff += 0.0001; //changes trajectories
//     }

//       for (var i = 0; i < particles.length; i++) {
//             particles[i].follow(flowfield);
//             particles[i].update();
//             particles[i].show();
//             particles[i].edges();
//       }

//       fr.html(floor(frameRate()));
//   }











//PARTICLES WITH DASHED LINES

// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;
// var particles = [];

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');

//     for (var i = 0; i < 10000; i++) {
//       particles[i] = new Particle();
//    }
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var angle = noise(xoff, yoff, zoff) * TWO_PI;
//         var v = p5.Vector.fromAngle(angle);
//         xoff += inc;
//         stroke(0, 50);
//          //strokeWeight(5); //makes lines thicker and particles bigger
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//       zoff += 0.0001;
//     }

//       for (var i = 0; i < particles.length; i++) {
//             particles[i].update();
//             particles[i].show();
//             particles[i].edges();
//       }

//       fr.html(floor(frameRate()));
//   }















//PARTICLES ONLY!!!!!
// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;
// var particles = [];

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');

//     for (var i = 0; i < 10000; i++) {
//       particles[i] = new Particle();
//    }
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var angle = noise(xoff, yoff, zoff) * TWO_PI;
//         var v = p5.Vector.fromAngle(angle);
//         xoff += inc;
//         stroke(0);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//       //   line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//       zoff += 0.0001;
//     }

//       for (var i = 0; i < particles.length; i++) {
//             particles[i].update();
//             particles[i].show();
//             particles[i].edges();
//       }

//       fr.html(floor(frameRate()));
//   }










      //FLOW FIELD: UNDULATING CURVING DASHES

// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var zoff = 0;

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var angle = noise(xoff, yoff, zoff) * TWO_PI;
//         var v = p5.Vector.fromAngle(angle);
//         xoff += inc;
//         stroke(0);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//       zoff += 0.0001;
//     }

//     fr.html(floor(frameRate()));
//   }









      //CURVING DASHES

// var inc = 0.1;
// var scl = 10;
// var cols, rows;

// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var angle = noise(xoff, yoff) * TWO_PI;
//         var v = p5.Vector.fromAngle(angle);
//         xoff += inc;
//         stroke(0);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//     }

//     fr.html(floor(frameRate()));
//   }




//DANCING TREE DASHES
// var inc = 0.1;
// var scl = 10;
// var cols, rows;
// var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');
//   }
  
//   function draw() {
//         background(255);
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var angle = noise(xoff, yoff) * TWO_PI;
//         var v = p5.Vector.fromAngle(random(angle));
//         xoff += inc;
//         stroke(0);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//     }

//     fr.html(floor(frameRate()));
//   }












  //DANCING DASHES
//   var inc = 0.1;
// var scl = 10;
// var cols, rows;
//var fr;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//     fr = createP('');
//   }
  
//   function draw() {
//         background(255);
//          //randomSeed(10); //freezes dancing
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var r = noise(xoff, yoff) * 255;
//         var v = p5.Vector.fromAngle(random(TWO_PI));
//         xoff += inc;
//         stroke(0);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//     }

//     fr.html(floor(frameRate()));
//   }








// CRYSTALIZATION SPIDERY KINDA TRANSITION TO BLACK
      // var inc = 0.1;
      // var scl = 10;
      // var cols, rows;
      
      // function setup() {
      //     createCanvas(1100, 1700);
      //     cols = floor(width / scl);
      //     rows = floor(height / scl);
      //   }
        
      //   function draw() {
      //       //   background(255); //stops blackscreening
                  //// randomSeed(10); //freezes it.. replace # with randomizer to get variety on click

      //     var yoff = 0;
      //     for (var y = 0; y < rows; y++) {
      //       var xoff = 0;
      //       for (var x = 0; x < cols; x++) {
      //         var index = (x + y * width) * 4;
      //         var r = noise(xoff, yoff) * 255;
      //         var v = p5.Vector.fromAngle(random(TWO_PI));
      //         xoff += inc;
      //         stroke(0);
      //         push();
      //         translate(x * scl, y * scl);
      //         rotate(v.heading());
      //         line(0, 0, scl, 0);
      
      //         pop();
      //       }
      //       yoff += inc;
      //     }
      //   }





//CREATING VECTOR LINES
// var inc = 0.1;
// var scl = 10;
// var cols, rows;

// function setup() {
//     createCanvas(1100, 1700);
//     cols = floor(width / scl);
//     rows = floor(height / scl);
//   }
  
//   function draw() {
//     var yoff = 0;
//     for (var y = 0; y < rows; y++) {
//       var xoff = 0;
//       for (var x = 0; x < cols; x++) {
//         var index = (x + y * width) * 4;
//         var r = noise(xoff, yoff) * 255;
//         var v = p5.Vector.fromAngle(0); // 0 = horizontal lines, PI/2 = vertical lines, PI/6 = dashed lines
//         xoff += inc;
//         stroke(0);
//         push();
//         translate(x * scl, y * scl);
//         rotate(v.heading());
//         line(0, 0, scl, 0);

//         pop();
//       }
//       yoff += inc;
//     }
//   }





//SMOKEy GRID!!!!
      // var inc = 0.1;
      // var scl = 10;
      // var cols, rows;
      
      // function setup() {
      //     createCanvas(1100, 1700);
      //     cols = floor(width / scl);
      //     rows = floor(height / scl);
      //   }
        
      //   function draw() {
      //     var yoff = 0;
      //     for (var y = 0; y < rows; y++) {
      //       var xoff = 0;
      //       for (var x = 0; x < cols; x++) {
      //         var index = (x + y * width) * 4;
      //         var r = noise(xoff, yoff) * 255;
      //         xoff += inc;
      //         fill(r);
      //         rect(x * scl, y * scl, scl, scl)
      //       }
      //       yoff += inc;
      //     }
      //   // noLoop();
      //   }
      



//GRAYSCALE MOVING GRID!!!!
      // var inc = 0.01;
      // var scl = 20;
      // var cols, rows;
      
      // function setup() {
      //     createCanvas(1100, 1700);
      //     cols = floor(width / scl);
      //     rows = floor(height / scl);
      //   }
        
      //   function draw() {
      //     var yoff = 0;
      //     for (var y = 0; y < rows; y++) {
      //       var xoff = 0;
      //       for (var x = 0; x < cols; x++) {
      //         var index = (x + y * width) * 4;
      //         var r = noise(xoff, yoff) * 255;
      //         xoff += inc;
      //         fill(random(255));
      //         rect(x * scl, y * scl, scl, scl)
      //       }
      //       yoff += inc;
      //     }
      //   // noLoop();
      //   }

















      ////////////////////////////////////////////////////////////////////////////////////


      // var xoff = 0;
// var yoff = 10000;
//var inc = 0.01;
// var start = 0;


//PIXELATION CAN BE CONTROLLED
      // function draw() {
      //   var yoff = 0;
      //   loadPixels();
      //   for (var y = 0; y < height; y++) {
      //     var xoff = 0;
      //     for (var x = 0; x < width; x++) {
      //       var index = (x + y * width) * 4;
      //       var r = noise(xoff, yoff) * 255; //brightness
      //       pixels[index + 0] = r; //red
      //       pixels[index + 1] = r; //green
      //       pixels[index + 2] = r; //blue
      //       pixels[index + 3] = 255; //alpha
      //       xoff += inc;
      //     }
      //     yoff += inc;
      //     noiseDetail(1); //pixelation happens here
      //   }
      // updatePixels();
      // // noLoop();
      // }


//SMOKEY NOISE!!!!!!!!!!!!
      // function draw() {
      //   var yoff = 0;
      //   loadPixels();
      //   for (var y = 0; y < height; y++) {
      //     var xoff = 0;
      //     for (var x = 0; x < width; x++) {
      //       var index = (x + y * width) * 4;
      //       var r = noise(xoff, yoff) * 255; //brightness
      //       pixels[index + 0] = r; //red
      //       pixels[index + 1] = r; //green
      //       pixels[index + 2] = r; //blue
      //       pixels[index + 3] = 255; //alpha
      //       xoff += inc;
      //     }
      //     yoff += inc; //smaller inc value blurs more
      //   }
      // updatePixels();
      // }


//BLURRY VERTICAL STRIPES!!!!!
      // function draw() {
      //   var yoff = 0;
      //   loadPixels();
      //   for (var y = 0; y < height; y++) {
      //     var xoff = 0;
      //     for (var x = 0; x < width; x++) {
      //       var index = (x + y * width) * 4;
      //       var r = noise(xoff, yoff) * 255; //brightness
      //       pixels[index + 0] = r; //red
      //       pixels[index + 1] = r; //green
      //       pixels[index + 2] = r; //blue
      //       pixels[index + 3] = 255; //alpha
      //       xoff += 0.01;
      //     }
      //   }
      // updatePixels();
      // }
    





//EVERY SINGLE PIXEL POINT GETS A NOISE VALUE... 1d noise
      // function draw() {
      //   loadPixels();
      //   var xoff = 0;
    
      //   for (var x = 0; x < width; x++) {
      //     for (var y = 0; y < height; y++) {
      //       var index = (x + y * width) * 4;
      //       var r = noise(xoff) * 255; //brightness
      //       pixels[index + 0] = r; //red
      //       pixels[index + 1] = r; //green
      //       pixels[index + 2] = r; //blue
      //       pixels[index + 3] = 255; //alpha

      // xoff += 0.01; //CREATES STREAKS //move y to outer loop to get lines across
      //     }
      //   }
      // updatePixels();
      // }



//STATIC NOISE!!!!!!
      // function setup() {
      //   createCanvas(1100, 1700);
      // }
      
      // function draw() {
      //   loadPixels();
    
      //   for (var x = 0; x < width; x++) {
      //     for (var y = 0; y < height; y++) {
      //       var index = (x + y * width) * 4;
      //       var r = random(255); //brightness
      //       pixels[index + 0] = r; //red
      //       pixels[index + 1] = r; //green
      //       pixels[index + 2] = r; //blue
      //       pixels[index + 3] = 255; //alpha
      //     }
      //   }
      // updatePixels();
      // }










    // function draw() {
    //   background(51);
  
    //   //THIS CREATES A LINE GRAPH
    //   // START MAKES GRAPH MOVE
    //   stroke(255);
    //   noFill();
    //   beginShape();
    //   // var xoff = 0;
    //   var xoff = start;
      
    //   for (var x = 0; x < width; x++) {
    //     stroke(255);
    //     // var y = random(height);
    //     // var y = map(noise(xoff), 0, 1, 0, height);
    //     // var y = height/2 + map(sin(xoff), 0, 1, 0, height) * height/2; //CREATES SINE WAVE
    //     // var y = height/2 + map(sin(xoff), 0, 1, 0, height) * height/2; //CREATES STRAIGHT LINES
    //     // var y = height/2 + sin(xoff) * height/2; //CREATES SMALLER SINE WAVES
    //     // var y = noise(xoff) * 300 + height/2 + sin(xoff) * height/2; //CREATES WOBBLE TO SINE WAVES
    //     // var n = map(noise(xoff), 0, 1, -50, 50); //ADDS NOISE TO SINE WAVE
    //     // var s = map(sin(xoff), -1, 1, 0, height);
  
    //     //CREATES MOVING NOISE SINE WAVE (with start + xoff variables activated)
    //     // var n = map(noise(xoff), 0, 1, 0, height); //ADDS SINE TO NOISE WAVE(BY ITSELF)
    //     // var s = map(sin(xoff), -1, 1, -50, 50);
    //     // var y = s + n;
    //     // vertex(x, y);
    //     //xoff += 0.01;
    //     // xoff += inc;
    //   }
    //   endShape();
    //   start += inc;



    ////////////////////////////////////////////////////////////////////////////////////
  // all this goes in the draw function


    //THIS CREATES RANDOM LINES FOR RANDOM VALUES ACROSS X AXIS
    // stroke(255);
    // noFill();
    // beginShape();
    // for (var x = 0; x < width; x++) {
    //   stroke(255);
    //   vertex(x, random(height));
    // }
    // endShape();

    
    //THIS CREATES GRAINY NOISE
    // for (var x = 0; x < innerWidth; x++) {
    //   stroke(255);
    //   point(x, random(height));
    // }
    //noLoop(); //FREEZES NOISE


    //THIS CREATES RANDOM X VALUES EVERY SECOND
    //var x = random(width);


    //THIS CREATES A ROVING CIRCLE
    // var x = map(noise(xoff), 0, 1, 0, width);
    // var y = map(noise(yoff), 0, 1, 0, height);
    // xoff += 0.01;
    // yoff += 0.01;
    // ellipse (x, y, 25, 25);


  //noise();
  //noise range is 0-1
  //perlin curves around .5